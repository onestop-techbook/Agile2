= 独学でアジャイルを学ぶ

//flushright{
渡部 啓太
//}

== 独りで学ぶという選択肢

ここまで読み進めてきて、「アジャイルの実例はわかった、情熱もある。ただ、実践の場がなくて……」という方もいるかもしれません。

社内でアジャイルに関する研修の講師をしていると、同じような声をよく聞きます。「アジャイルで開発をやってみたいんです。だけど、今いるプロジェクト（あるいは部署、チーム）では既存の開発手法から変わらなさそうなんですよね」

これでは、アジャイルに習熟していくためのフィードバックループが回りません。同じように、もどかしさや機会のなさに嘆いている方は多いのではないでしょうか。

うーん、残念。でも、あきらめる必要はありません。独りで学びましょう。独りで「スクラム」をするのです。

あたりまえですが、独りだとチームで取り組むことはできません。なので、正確にはスクラムとはいえません。しかし、独りでできる範囲であれば、経験を積めます。学習が回ります。独りでスクラムをしても、アジャイルに関する経験値はあがるのです。

スクラムに関する本を読んだとき、あるいはカンファレンスで他社事例を聞いたとき、独学の効果はあらわれます。自身の経験を踏まえた解釈や理解ができるようになるのです。

筆者は日々、講師だけではなく、アジャイル開発チームの立ち上げの支援や、スクラムマスターとしての仕事もしています。成長していくチームメンバーを見ていて感じるのは、「アジャイルは体験してみないと、真の理解ができない」ということです。アジャイルソフトウェア開発の定義である「アジャイルソフトウェア開発宣言」に、具体的なやり方は示されていません。自分でうまいやり方を見つけていく必要があるのです。

独習アジャイルをしましょう。

== 独習アジャイルの進め方

ここから、独習アジャイルの具体的な進め方を紹介します。独習アジャイルでは、アジャイルを実践するためのフレームワークであるスクラムを採用しています。

スクラムに関する用語にはカッコをつけています。それぞれの用語の内容を知っているものとして解説しているため、もしわからない単語があれば「スクラムガイド」や初学者向けの本（『SCRUM BOOT CAMP THE BOOK[増補改訂版]スクラムチームではじめるアジャイル開発』（翔泳社、2020）や『アジャイル開発とスクラム 第2版 顧客・技術・経営をつなぐ協調的ソフトウェア開発マネジメント』（翔泳社,2021）がおすすめ）を参照してください。「スクラムガイド」は、インターネットで検索すれば、すぐにでてきます。

スクラムをするといっても、独りなのでそこまでかまえる必要はありません。誰かの承認も、上長への報告義務もありません。やることも簡単です。もしかすると、すでに仕事のやり方として身についている部分もあるかもしれません。ただ、そこに「スクラムをやっているんだ」という意識をのせていきましょう。

=== 準備をする

まずは準備です。自分が持っているタスクをひたすら洗い出しましょう。これは仕事のことのみでもよいのですが、プライベートなタスクも含めると、よりスクラムの効果を実感できると思います。自分の頭のなかにあるすべてを外に出しましょう。目に見えるかたちにすることで、「透明性」があがり、自分の状況を認知しやすくなります。

注意点は1つ。すべてのタスクを1日以下の大きさにしましょう。それ以上の大きなタスクだと、日々の状況を「検査」（望ましくない変化や問題の検知）することができませんからね。

洗い出しに使うのは紙のノートでもよいですし、TrelloやMiro、NotionといったWebサービスを駆使してもよいです。あるいは、パソコン上のテキストファイルやExcelでもOK。自分の使いやすいツールを使いましょう。

タスクを洗い出せたら、それらを優先順に並び替えましょう。期日や重要度、タスクが生みだす価値、今後のリスクを基準として順番を入れ替えていくとよいでしょう。このリストが、「プロダクトバックログ」です。

特別な事情がない限り、1週間を一区切りとして「スプリント」を回していくのがわかりやすいです。例えば、月曜はじまり日曜終わりのような、くり返しやすいタイムボックスを設定しましょう。

=== 「スプリント」をすごす

==== 「スプリントプランニング」

さて、準備が整ったのなら、いよいよ独りスクラムのはじまりです。次の1週間でやることを「プロダクトバックログ」から取り出しましょう。もちろん、優先順位の高いタスクからです。

取り出すときには、1週間でギリギリ収まる量を見極めようとする気持ちが重要です。結果として過不足があったとしても、ギリギリを見積もるチャレンジを繰り返すうちに、自分が1週間でこなせる限界量がわかってきます。だんだんと、計画作りがうまくなっていきます。

次の1週間でやることを計画する。これが「スプリントプランニング」です。

==== 「デイリースクラム」

「スプリントプランニング」で「スプリント」の計画を立てることができました。次は、タスクをこなしていきましょう。そして毎日、決まった時間に、計画どおりに進んでいるのかをチェックします。昨日は何をやったか、今日は何をやるか、何かリスクや問題はないか。

順調に進んでいるのなら問題ないですが、予定とずれてしまうこともあります。進捗が遅れている場合は、リカバリープランを考えます。タスク内容によってはチームメンバーに相談したり、誰かの助けを借りることもあるでしょう。

このように、日々状況を「検査」し、必要なら計画を立て直し、「適応」します。これが「デイリースクラム」です。個人的には、1日の計画を立てやすいので、朝に実施することをおすすめします。

==== 「スプリントレビュー」

そして、1週間のおわりに成果（作った資料やもの、ソフトウェア）をほかの人に見てもらいます。できればチームメンバーやマネージャーからコメントをもらいましょう。得られたフィードバックから新たなタスクを「プロダクトバックログ」に追加したり、全体的な「プロダクトバックログ」の方針を再検討します。人に見てもらうのが難しい場合は、自己評価でも問題ないです。その場合は、できるだけ客観的に確認するようにしましょう。

これが「スプリントレビュー」です。

==== 「スプリントレトロスペクティブ」

最後に、1週間のふりかえりをします。うまくいったことと、いかなかったこと。それはなぜなのか。次の1週間をよりよくするためのアクションはなにか。KPT（よかったこと、困ったこと、次に試すこと）やYWT（やったこと、わかったこと、次にやること）といったふりかえりのフレームワークを使うのも手です。

採用したアクションアイテムは、必要ならば「プロダクトバックログ」に追加しましょう。タスクではなく、自分に課すルールや心がまえであれば、壁やモニターに貼っておきましょう。

これが「スプリントレトロスペクティブ」です。

=== スプリントを繰り返し、進化／深化させる

ふりかえりが終われば、新しい1週間のはじまりです。再び「スプリントプランニング」からはじめていきましょう。

「スプリント」を繰り返していくと、タスクの増減や優先順位の変化が日々起こるはずです。「プロダクトバックログ」は常にアップデートし、最新の状況を反映しているリストにしましょう。

スクラムの基本的な流れに加え、自分がやってみたいと思うアジャイルに関するプラクティスを試していくのも、もちろんOKです。例えば、テスト駆動開発をしたいのであれば、ローカルの開発環境だけで動くようなテストやCI環境を用意すれば、誰にも文句はいわれません。

「スプリント」を重ねるにつれ、リズムよく仕事をする大切さがわかってきます。毎日、毎週計画を立てる。ふりかえりをする。学習のループが回る。スクラムが機能するための三本柱である「透明性」「検査」「適応」が実感できるのです。

== つまり、仕事の進め方なんです

ここまで、独習アジャイルの進め方について解説をしてきました。「なんだよ、そんなことか」と思う方もいるかもしれません。それもそのはず。筆者の考えでは、スクラム（そしてしばしば比較対象にあがるウォーターフォール開発）は、タスク管理の手法であるからです。

タスク管理の本を読んでいると、アジャイルの文脈で書かれていてもおかしくない文章が出てきます。

//quote{
豊かではあるものの、変化の激しい現代において、ゆとりをもって無理なく結果を出していくには、今までの考え方や仕事のやり方では歯が立たない。今までとはまったくちがう、新しい手法やテクニック、新しい習慣が求められているのだ。
（『全面改訂版 はじめてのGTD ストレスフリーの整理術』（二見書房、2015）より）
//}

//quote{
「1つのことに集中し、それが完了してから次に進む」これが成功の王道
（『仕事に追われない仕事術 マニャーナの法則』（ディスカヴァー・トゥエンティワン,2024）より）
//}

//quote{
小さな失敗を重ねることで、何がうまくいくか、うまくいかないかを知ることができます。
（『「やること地獄」を終わらせるタスク管理「超」入門』（星海社、2019）より）
//}

つまり、「仕事をうまくやりましょう」ということ。スクラムは仕事の進め方そのものなのです。

独習アジャイルを進めていけば、アジャイルの重要な点はツールや技術だけではなく、仕事を進めるための考え方であることがわかるはずです。

== アジャイルを説明できるようにもなる

最後に、独習アジャイルの重要なポイントをもうひとつ紹介します。それは「アジャイルを他者に説明できるようになる」です。

筆者が人生ではじめてスクラムをチームに導入できたきっかけは、実はこの独りで行うスクラムだったのです。独習アジャイルを通じ、アジャイルの進め方とメリットを理解していきました。そして、「アジャイルをやりたいという熱量」にプラスして、「スクラムで生産性があがった、働きやすくなった」という話をマネージャーに説きました。その説得の場で、「やってみよう」という返事をもらうことができました。

そのあとは、スクラムマスターとして、自身が学んできたこと（独習アジャイルや、それを通じて解像度があがった本やコミュニティの情報など）をチームに共有し、スクラムマスターとしての一歩を踏み出しました。さらに、そのスクラムチーム立ち上げの経験をもとに、全社にアジャイルを推進する組織を立ち上げることもできました。そして、今ではアジャイルコーチとしてさまざまな社内外のチームを支援しています。

独りで学べること、練習できることは多いです。スポーツであれば、座学はもちろん、筋トレや素振りが独習に該当するでしょう。アジャイルにおける筋トレや素振りが、独習アジャイルなのです。

アジャイルを学ぶ第一歩として、独習アジャイルという選択はいかがでしょうか。

　

//embed{
    \begin{minipage}{.1\linewidth}
        \centering
        \includegraphics[width=.75\linewidth]{images/chap-watanabe/watanabe_icon.jpeg}
    \end{minipage}
    \begin{minipage}{.89\linewidth}
        渡部啓太
        チーム設計師
        \end{minipage}
    \hspace{1ex}
//}

チーム作りの専門家、アジャイルコーチ。
チーム作りを通じ、誰もが楽しく働ける社会を目指す。
ソフトウェア開発者としてキャリアをスタート。よりよい仕事の進め方を模索するなかでチーム作りの大切さに目覚め、スクラムの導入や全社的なアジャイル推進活動を経験し、現在はNRI bit Labsに所属。アジャイルの導入支援やコーチングを行っている。
チームの立ち上げや、軌道修正が得意。
